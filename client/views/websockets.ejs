<script>

  window.pageReady = function(map, mapHelpers) {

    var sessionToken = $("#sessionToken").attr("value")

    window.markers = {}

    function geolocate(successFn, errFn) {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((pos) => {
          successFn([pos.coords.latitude, pos.coords.longitude])
        }, errFn)
      }
    }

    function nullifyEmptyStringVals (obj) {
      var obj = _.extend({}, obj)
      for (var key of Object.keys(obj)) {
        val = obj[key]
        if ((typeof val == 'string') && (val.length == 0)) { delete obj[key]
        } 
      };
      return obj;
    }

    function onWsOpen (e) {
      ws.send(JSON.stringify({cmd: "login", sessionToken: sessionToken}))
    }

    function onWsMessage (e) {
      var data = JSON.parse(e.data)
      switch (data.cmd) {
        case "loginSuccess":
          console.log("loginSuccess")
          loginSuccess();
          break;
        case "mapData":
          addMapData(data.users)
          break;
        case "userChange":
          userChange(data.users)
          break;
        case "userRemove":
          userRemove(data.users)
          break;
      }
    }

    var $profileSaved = $("#profileSaved")

    function profileSaved() {
      $profileSaved.css("display", "true")
      setTimeout(function(){
        $profileSaved.css("display", "false")
      }, 5000)
    }

    var $username = $("#username")
    var $profileText = $("#profileForm textarea")

    function userObj (coords) {
      return nullifyEmptyStringVals({
        username: $username.attr("value"),
        sessionToken: sessionToken,
        latitude: coords[0],
        longitude: coords[1],
        profileText: $profileText.val()
      })
    }

    function mapPing (coords) {
      var user = userObj(coords)
      ws.send(JSON.stringify( { cmd: "mapPing", user: user } ));
      if (typeof(user.profileText) == 'string') { profileSaved() }
    }
 
    function loginSuccess () {
      window.setInterval(function() {
          geolocate(function(coords) {
            ws.send(JSON.stringify( { cmd: "loginConfirm" } ))
            mapPing(coords)
          }, function(err) {console.log("err: " + err)})
      }, 5000)
    }
  
    function addMapData (users) {
      users.forEach(function(user){
        console.log("add Map Data")
        markers = mapHelpers.appendToMap(markers, user)
      })
    }

    function userChange (users) {
      users.forEach(function(user){
        markers = mapHelpers.removeFromMap(markers, user)
        markers = mapHelpers.appendToMap(markers, user)
      })
    }

    function userRemove (users) {
      users.forEach(function(user){
        markers = mapHelpers.removeFromMap(markers, user)
      })
    }

    function initWebsockets () {
      window.ws = new WebSocket("ws://localhost:4080")
      ws.addEventListener("message", onWsMessage);
      ws.addEventListener("open", onWsOpen);
    }
  
    if ((typeof(sessionToken) == 'string') && (sessionToken.length > 0)) {
      // Meaining authenticated.ejs is being shown 
      initWebsockets()
    }
  
  }




</script>